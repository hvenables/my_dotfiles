#------------------------------------------------------------------------------
# Ruby basic object stuff

snippet @
@${1:var} = $1$0
endsnippet

snippet /^(\s*attr_reader .*)/ "attr_reader: add another" r
`!p snip.rv = match.group(1).rstrip(",")`, :$0
endsnippet

snippet /^(\s*)(@\w* = \S*)/ "Instance var init: add another" r
`!p snip.rv = match.group(1) + match.group(2)`
`!p snip.rv = match.group(1)`@${1:var} = $1$0
endsnippet

snippet cla<
class ${1:`!v substitute(vim_snippets#Filename(), '\(_\|^\)\(.\)', '\u\2', 'g')`} < ${2:ApplicationRecord}
	$0
end
endsnippet


snippet class "class <class_name> def initialize ... end end"
class ${1:class_name}
	def initialize${2:(${3:*args})}
		$0
	end
end
endsnippet

snippet pr "private"
private
endsnippet

#------------------------------------------------------------------------------
# Missing Enumerables

snippet "(\S+)\.Detect" ".detect { |<element>| <block> }" r
`!p snip.rv=match.group(1)`.detect { |${1:`!p
element_name = match.group(1).lstrip('$@')
ematch = re.search("([A-Za-z][A-Za-z0-9_]+?)s?[^A-Za-z0-9_]*?$", element_name)
try:
	wmatch = re.search("([A-Za-z][A-Za-z0-9_]+)$", ematch.group(1))
	snip.rv = wmatch.group(1).lower()
except:
	snip.rv = 'element'
`}| $0 }
endsnippet

snippet "(\S+)\.detect" ".detect do |<element>| <block> end" r
`!p snip.rv=match.group(1)`.detect do |${1:`!p
element_name = match.group(1).lstrip('$@')
ematch = re.search("([A-Za-z][A-Za-z0-9_]+?)s?[^A-Za-z0-9_]*?$", element_name)
try:
	wmatch = re.search("([A-Za-z][A-Za-z0-9_]+)$", ematch.group(1))
	snip.rv = wmatch.group(1).lower()
except:
	snip.rv = 'element'
`}|
	$0
end
endsnippet
